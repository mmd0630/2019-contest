姓名：毛梦蝶
手机尾号（4位）：6389


 #game {
        display: none;
    }
    
    #house {
        position: relative;
    }
    
    .bg {
        position: absolute;
        width: 50px;
        height: 50px;
        box-sizing: border-box;
    }
    
    .block {
        position: absolute;
        background-image: url(imgs/wall.png);
        width: 50px;
        height: 50px;
        box-sizing: border-box;
    }
    
    .box {
        position: absolute;
        background: #fbd500;
        width: 50px;
        height: 50px;
        background-image: url(imgs/box.png);
    }
    
    .target {
        position: absolute;
        background: url(imgs/target.jpg);
        background-size: 50px 50px;
        ;
        width: 50px;
        height: 50px;
        box-sizing: border-box;
    }
    
    #person {
        background-image: url(imgs/person.png);
        width: 50px;
        height: 50px;
        position: absolute;
    }
    
    #person.up {
        background-position: 0 0;
    }
    
    #person.right {
        background-position: -50px 0;
    }
    
    #person.bottom {
        background-position: -100px 0;
    }
    
    #person.left {
        background-position: -150px 0;
    }
    /*移动端的DOM*/
    
    .operate-bar {
        font-size: 30px;
    }
    
    .height20percent {
        height: 30%;
    }
    
    .height30percent {
        height: 30%;
    }
    
    .height40percent {
        height: 40%;
    }
    
    .height100percent {
        height: 100%;
    }
    
    .font30 {
        font-size: 30px;
        color: #34495e;
    }
    
    
    
    
    
    <div id="select">
        <div class="container">
            <div class="row">
                <p class="text-info">
                    已经解锁的关卡:
                    <p id="level">
                    </p>
                </p>
                <button id="start" class="btn btn-default"> 
                    开始游戏 
                </button>
            </div>
        </div>
    </div>
    <div id="game" class="container">
        <div class="row">
            <button onclick="location.reload()" class="btn btn-info"> 
                返回选择关卡重新 
            </button>
            <div id="house">
            </div>
        </div>
    </div>
    
    
     G = {
            level: [{
                    //0是空的地图 
                    //1是板砖 
                    //3是目标点 
                    state: [
                        [0, 0, 1, 1, 1, 0, 0, 0, 0],
                        [0, 1, 1, 3, 3, 1, 0, 0, 0],
                        [0, 1, 0, 0, 0, 0, 1, 0, 0],
                        [0, 1, 0, 0, 0, 0, 1, 0, 0],
                        [0, 1, 1, 1, 1, 1, 1, 0, 0]
                    ],
                    person: {
                        x: 2,
                        y: 2
                    },
                    box: [{
                        x: 3,
                        y: 2
                    }, {
                        x: 4,
                        y: 2
                    }]
                },
                //第二关 
                {
                    //0是空的地图 
                    //1是板砖 
                    //3是目标点 
                    state: [
                        [0, 1, 1, 1, 1, 1, 0, 0],
                        [0, 1, 0, 0, 1, 1, 1, 0],
                        [0, 1, 0, 0, 0, 0, 1, 0],
                        [1, 1, 1, 0, 1, 0, 1, 1],
                        [1, 3, 1, 0, 1, 0, 0, 1],
                        [1, 3, 0, 0, 0, 1, 0, 1],
                        [1, 3, 0, 0, 0, 0, 0, 1],
                        [1, 1, 1, 1, 1, 1, 1, 1]
                    ],
                    person: {
                        x: 2,
                        y: 2
                    },
                    box: [{
                            x: 3,
                            y: 2
                        }, {
                            x: 2,
                            y: 5
                        }, {
                            x: 5,
                            y: 6
                        }]
                        /* 
                        box : [ 
                            {x:3, y : 1}, 
                            {x:4, y : 1}, 
                            {x:4, y : 2}, 
                            {x:5, y : 5} 
                        ] 
                        */
                },
                //第三关 
                {
                    //0是空的地图 
                    //1是板砖 
                    //3是目标点 
                    state: [
                        [0, 0, 0, 1, 1, 1, 1, 1, 1, 0],
                        [0, 1, 1, 1, 0, 0, 0, 0, 1, 0],
                        [1, 1, 3, 0, 0, 1, 1, 0, 1, 1],
                        [1, 3, 3, 0, 0, 0, 0, 0, 0, 1],
                        [1, 3, 3, 0, 0, 0, 0, 0, 1, 1],
                        [1, 1, 1, 1, 1, 1, 0, 0, 1, 0],
                        [0, 0, 0, 0, 0, 1, 1, 1, 1, 0]
                    ],
                    person: {
                        x: 8,
                        y: 3
                    },
                    box: [{
                        x: 4,
                        y: 2
                    }, {
                        x: 3,
                        y: 3
                    }, {
                        x: 4,
                        y: 4
                    }, {
                        x: 5,
                        y: 3
                    }, {
                        x: 6,
                        y: 4
                    }]
                },
                //第四关 
                {
                    //0是空的地图 
                    //1是板砖 
                    //3是目标点 
                    state: [
                        [0, 1, 1, 1, 1, 1, 1, 1, 0, 0],
                        [0, 1, 0, 0, 0, 0, 0, 1, 1, 1],
                        [1, 1, 0, 1, 1, 1, 0, 0, 0, 1],
                        [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
                        [1, 0, 3, 3, 1, 0, 0, 0, 1, 1],
                        [1, 1, 3, 3, 1, 0, 0, 0, 1, 0],
                        [0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
                    ],
                    person: {
                        x: 2,
                        y: 3
                    },
                    box: [{
                        x: 2,
                        y: 2
                    }, {
                        x: 4,
                        y: 3
                    }, {
                        x: 6,
                        y: 4
                    }, {
                        x: 7,
                        y: 3
                    }, {
                        x: 6,
                        y: 4
                    }]
                },
                //第五关 
                {
                    //0是空的地图 
                    //1是板砖 
                    //3是目标点 
                    state: [
                        [0, 0, 1, 1, 1, 1, 0, 0],
                        [0, 0, 1, 3, 3, 1, 0, 0],
                        [0, 1, 1, 0, 3, 1, 1, 0],
                        [0, 1, 0, 0, 0, 3, 1, 0],
                        [1, 1, 0, 0, 0, 0, 1, 1],
                        [1, 0, 0, 1, 0, 0, 0, 1],
                        [1, 0, 0, 0, 0, 0, 0, 1],
                        [1, 1, 1, 1, 1, 1, 1, 1]
                    ],
                    person: {
                        x: 4,
                        y: 6
                    },
                    box: [{
                            x: 4,
                            y: 3
                        }, {
                            x: 3,
                            y: 4
                        }, {
                            x: 4,
                            y: 5
                        }, {
                            x: 5,
                            y: 5
                        }]
                        /* 
                         box : [ 
                         {x:3, y : 1}, 
                         {x:4, y : 1}, 
                         {x:4, y : 2}, 
                         {x:5, y : 5} 
                         ] 
                         */
                },
                //第六关 
                {
                    //0是空的地图 
                    //1是板砖 
                    //3是目标点 
                    state: [
                        [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0],
                        [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0],
                        [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],
                        [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0],
                        [3, 3, 3, 1, 1, 0, 0, 0, 0, 0, 1, 1],
                        [3, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1],
                        [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
                        [3, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1],
                        [3, 3, 3, 1, 1, 1, 0, 1, 0, 0, 1, 1],
                        [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0],
                        [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0],
                        [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0]
                    ],
                    person: {
                        x: 5,
                        y: 10
                    },
                    box: [{
                        x: 5,
                        y: 6
                    }, {
                        x: 6,
                        y: 3
                    }, {
                        x: 6,
                        y: 5
                    }, {
                        x: 6,
                        y: 7
                    }, {
                        x: 6,
                        y: 9
                    }, {
                        x: 7,
                        y: 2
                    }, {
                        x: 8,
                        y: 2
                    }, {
                        x: 9,
                        y: 6
                    }]
                }
            ],
            //map data 
              mapData: (function() {
                var data = {};
                return {
                    get: function() {
                        return data;
                    },
                    set: function(arg) {
                        data = arg;
                    },
                    //穿进来的数据在界面中是否存在; 
                    collision: function(x, y) {
                        if (data.state[y][x] === 1) return true;
                        return false;
                    },
                    collisionBox: function(x, y) {
                        for (var i = 0, len = data.box.length; i < len; i++) {
                            if (data.box[i].x === x && data.box[i].y === y) return data.box[i];
                        };
                        return false;
                    }
                }
            })(),
